<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config" scriptlang="groovy">

	<script><![CDATA[ 
		listOfLinks = new ArrayList()
		resultList = new ArrayList()
	]]></script>

	<robotics-flow>
		<robot name="roboticsDriver" driver="chrome" close-on-completion="true" start-in-private="true">
			<script><![CDATA[
				timeouts(40 * 1000);
				open("https://train-invoiceplane.workfusion.com")
				$(byId("email")).val("wf-robot@mail.com")
				$(byId("password")).val("BotsRock4ever!")
				$(byAttribute('type','submit')).click()
			]]></script>
			<loop item="invoice">
				<list>
					<datastore name="invoices">
						select * from @this
					</datastore>
				</list>
				<body>
					<var-def name="products">
						<datastore name="products">
							<template>select * from @this where invoice_id = '${invoice.get("invoice_id").toString()}'</template>
						</datastore>
					</var-def>
					<script><![CDATA[ 
						open("https://train-invoiceplane.workfusion.com")
										
						$(byXpath("//a[contains(@class, \"create-invoice\")]/span")).waitUntil(VISIBLE).click()
						$(byId("client_name")).waitUntil(VISIBLE).selectOption(invoice.get("client").toString())
						$(byId("invoice_group_id")).selectOption(invoice.get("group").toString())
						$(byId("invoice_create_confirm")).click()
						
						def tbodyXpath = "//table[@id='item_table']/tbody[contains(@class, \"item\")]"
						for (int i = 0; i < products.size() - 1; i++) {
							$(byXpath("//a[contains(@class, \"btn_add_row\")]")).waitUntil(VISIBLE).click()
						}
						for (int i = 0; i < products.size(); i++) {
							$(byXpath("${tbodyXpath}[${i+1}]//input[@name='item_name']")).val(products.get(i).get("title").toString())
							$(byXpath("${tbodyXpath}[${i+1}]//input[@name='item_quantity']")).val(products.get(i).get("quantity").toString())
							$(byXpath("${tbodyXpath}[${i+1}]//input[@name='item_price']")).val(products.get(i).get("price").toString())
							$(byXpath("${tbodyXpath}[${i+1}]//textarea[@name='item_description']")).val(products.get(i).get("description").toString())
							$(byXpath("${tbodyXpath}[${i+1}]//input[@name='item_discount_amount']")).val(products.get(i).get("discount").toString())
						}
						$(byId("invoice_discount_percent")).val(invoice.get("discount_percent").toString())
						$(byId("payment_method")).selectOption(invoice.get("payment_method").toString())
						$(byId("invoice_terms")).val(invoice.get("invoice_terms").toString())
						$(byId("btn_save_invoice")).click()
						try {
							$(byXpath("//div[contains(@class, 'alert')][contains(text(), 'Record successfully updated')]")).waitUntil(VISIBLE)
						} catch (Exception e) {
							e.printStackTrace()
						}
						
						screen = driver().getScreenshotAs(OutputType.BYTES)
					]]></script>
					
					<var-def name="screenLink">
				        <s3 bucket='wf-vr-training'>
				            <s3-put path="YauheniShyroki/${'invoice' + invoice.get('invoice_id') + ' ' + new java.util.Date().toString() + '.png'}"  acl="PublicRead">
				                <script return="screen"/>
				            </s3-put>
				        </s3>
				    </var-def>
				    
				    <script><![CDATA[ 
				    	listOfLinks.add(screenLink)
				    ]]></script>
				</body>
			</loop>
			
			<script><![CDATA[ 
				import com.google.gson.Gson
				import com.google.gson.GsonBuilder
				open("https://train-invoiceplane.workfusion.com/index.php/invoices/status/all")
				$(byXpath("//h1[contains(text(), 'Invoices')]")).waitUntil(VISIBLE)
				invListScreen = driver().getScreenshotAs(OutputType.BYTES)
				
				def trXpath = "//table/tbody/tr"
				def trs = $$(byXpath("${trXpath}")).size()
				if (trs < 10) {
					for(int i = 1; i <= trs ; i++) {
						Map product = new HashMap()
						product.put("Status", $(byXpath("${trXpath}[${i}]/td[1]")).getText())
						product.put("ID", $(byXpath("${trXpath}[${i}]/td[2]")).getText())
						product.put("Created", $(byXpath("${trXpath}[${i}]/td[3]")).getText())
						product.put("Due Date", $(byXpath("${trXpath}[${i}]/td[4]")).getText())
						product.put("Client name", $(byXpath("${trXpath}[${i}]/td[5]")).getText())
						product.put("Amount", $(byXpath("${trXpath}[${i}]/td[6]")).getText())
						product.put("Balance", $(byXpath("${trXpath}[${i}]/td[7]")).getText())
						
						Gson gson = new GsonBuilder().create()
						jsonValue = gson.toJson(product)
						resultList.add(jsonValue)
					} 
				} else {
					for(int i = 1; i <= 10 ; i++) {
						Map product = new HashMap()
						product.put("Status", $(byXpath("${trXpath}[${i}]/td[1]")).getText())
						product.put("ID", $(byXpath("${trXpath}[${i}]/td[2]")).getText())
						product.put("Created", $(byXpath("${trXpath}[${i}]/td[3]")).getText())
						product.put("Due Date", $(byXpath("${trXpath}[${i}]/td[4]")).getText())
						product.put("Client name", $(byXpath("${trXpath}[${i}]/td[5]")).getText())
						product.put("Amount", $(byXpath("${trXpath}[${i}]/td[6]")).getText())
						product.put("Balance", $(byXpath("${trXpath}[${i}]/td[7]")).getText())
						
						Gson gson = new GsonBuilder().create()
						jsonValue = gson.toJson(product)
						resultList.add(jsonValue)
					} 
				}
			]]></script>
			<var-def name="invListScreenLink">
		        <s3 bucket='wf-vr-training'>
		            <s3-put path="YauheniShyroki/${'invoices ' + new java.util.Date().toString() + '.png'}"  acl="PublicRead">
		                <script return="invListScreen"/>
		            </s3-put>
		        </s3>
		    </var-def>
		    <script><![CDATA[ 
		    	listOfLinks.add(invListScreenLink)
		    ]]></script>
		</robot>
	</robotics-flow>

	<var-def name="excelLink">
		<s3 bucket="wf-vr-training">
			<s3-put path="YauheniShyroki/${'products ' + new java.util.Date().toString() + '.xlsx'}"  acl="PublicRead" content-type="application/vnd.ms-excel">
                <list-to-excel>
                	<template>${resultList.toString()}</template>
                </list-to-excel>
            </s3-put>
		</s3>
	</var-def>

	<export include-original-data="false">
		<single-column name="invoice1" value="${listOfLinks.get(0)}" />
		<single-column name="invoice2" value="${listOfLinks.get(1)}" />
		<single-column name="invoice3" value="${listOfLinks.get(2)}" />
		<single-column name="invoices" value="${listOfLinks.get(3)}" />
		<single-column name="excel" value="${excelLink}" />
	</export>

</config>